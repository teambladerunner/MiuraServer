#smtp {
 # host=uk1mailhost2010.misys.global.ad
 # #port=25
 # #ssl=false
 # user="zubin.kavarana@misys.com"
 # #password="C0m1ngup"
 # password=""
 # from="miura@misys.com"
#}

securesocial {
  #
  # Where to redirect the user if SecureSocial can't figure that out from
  # the request that was received before authenticating the user
  #
  onLoginGoTo=/

  #
  # Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
  #
  onLogoutGoTo=/login

  #
  # Enable SSL
  #
  ssl=false

  #
  # The controller class for assets. This is optional, only required
  # when you use a custom class for Assets.
  #
  #assetsController=controllers.ReverseMyCustomAssetsController

  #cookie {
    #name=id
    #path=/
    #domain=some_domain
    #httpOnly=true
    #idleTimeoutInMinutes=30
    #absoluteTimeoutInMinutes=720
  #}

  #
  # Parameters for the cookie used to track users.
  #
  cookie {
    #
    # The cookie name (defaults to 'id')
    name=authid
    #
    # The path for which the cookie should be sent by the browser (defaults to /)
    #
    #path=/
    #
    # The domain for which the cookie should be sent (it is left empty by default)
    #
    #domain=some_domain
    #
    # If set to true, the cookie is not readable by a client side script (defaults to true).
    #
    httpOnly=false
    #
    # The amount of time the session id will remain valid since the last request
    #
    idleTimeoutInMinutes = 30
    #
    # The amount of time the session id will be valid since the user authenticated.
    # After this the user will need to re-authenticate
    #
    absoluteTimeOutInMinutes = 720
  }


  userpass {
    withUserNameSupport=false
    sendWelcomeEmail=true
    enableGravatarSupport=false
    signupSkipLogin=true
    # tokenDuration: Every time a user signs up or attempts a password reset SecureSocial will
    # generate a token that identifies that request. Each token has an expiration date and this
    # property is used to compute it.
    # This value is expressed in minutes and is set to 60 by default.
    tokenDuration=60
    tokenDeleteInterval=5
    minimumPasswordLength=8
    enableTokenJob=true
    hasher=bcrypt
  }

  twitter {
    requestTokenUrl="https://twitter.com/oauth/request_token"
    accessTokenUrl="https://twitter.com/oauth/access_token"
    authorizationUrl="https://twitter.com/oauth/authenticate"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
  }

  facebook {
    authorizationUrl="https://graph.facebook.com/oauth/authorize"
    accessTokenUrl="https://graph.facebook.com/oauth/access_token"
    clientId=your_client_id
    clientSecret=your_client_secret
    # this scope is the minimum SecureSocial requires.  You can add more if required by your app.
    scope=email
  }

  google {
    authorizationUrl="https://accounts.google.com/o/oauth2/auth"
    accessTokenUrl="https://accounts.google.com/o/oauth2/token"
    clientId=537568237820-jc9r6pvm8onj2a4koitgbvbjh11hfm94.apps.googleusercontent.com
    clientSecret=zpM2vIeW8-yhRiqvXWxe_Ca5
    scope="profile email"
  }

  linkedin {
    requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
    accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
    authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
    consumerKey=your_consumer_key
    consumerSecret=your_consumer_secret
  }


}